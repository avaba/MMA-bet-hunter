/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:border-box}html{box-sizing:border-box}body{font-family:'Open Sans',sans-serif;margin:0;background:#e5e5e5}img{max-width:100%}a{text-decoration:none}.container{max-width:1700px;margin:0 6vw}.main{position:relative;overflow:hidden}.header{background:#061629;padding:12px 0;margin-bottom:36px}.header__wrap{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.header__logo{margin-right:auto}.header__menu{display:-webkit-box;display:flex;list-style:none;padding:0;margin:0 0 0 40px}.header__menu li{margin-right:42px}.header__menu li:last-of-type{margin-right:0}.header__menu li a{color:#fff;font-weight:700;font-size:14px;text-transform:uppercase}.header__menu li a:hover{color:#c6fa32}.header__menu li.active a{color:#c6fa32}.footer{border:1px solid red}.header-bet{margin-bottom:40px}.header-bet__subtitle{color:#415b7a;font-weight:700;font-size:14px;line-height:19px;text-transform:uppercase;letter-spacing:.025em;margin-bottom:3px;display:block}.header-bet__name{color:#061629;font-size:32px;font-weight:300;display:block;margin:0}.header-bet__name span{font-weight:700;display:inline-block}.header-bet__time{font-size:32px;color:#061629}.header-bet__time span{display:inline-block;background:#c6fa32;font-weight:700}.fighters{display:-webkit-box;display:flex;background:#fff;border-radius:8px 8px 0 0;margin-left:6vw;position:relative}.fighters__left{min-width:412px;box-shadow:0 0 30px rgba(30,33,38,.08);position:relative;z-index:2}.fighters__right{overflow-x:auto;position:relative}.fighters-left-head{min-height:54px;background:#061629;border-radius:8px 0 0 0;border-right:1px solid #1f3753;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;padding-left:44px;font-weight:700;font-size:14px;color:#fff}.fighters-right-head{display:-webkit-box;display:flex;color:#fff;position:relative;z-index:2}.fighters-right-head__col{min-height:54px;background:#061629;border-right:1px solid #1f3753;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;font-weight:700;text-decoration:underline;cursor:pointer;min-width:210px;font-size:14px}.fighters-right-head__col:last-of-type{border-radius:0 8px 0 0;border-right:0}.fighters-right-head__col:hover{text-decoration:none}.fighters-right-head__col.active{color:#c6fa32;text-decoration:none}.fighters-right-head__col img{margin-right:14px}.fighters .fighters-event__value{padding:0 55px 0 44px;position:relative;cursor:pointer;background:#fefefe;height:80px;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.fighters .fighters-event__value:before{content:'';position:absolute;bottom:0;left:44px;right:0;height:1px;background:#ebeef2}.fighters .fighters-event__value-name{font-weight:700;display:block;margin-bottom:3px;font-size:16px;position:relative;min-width:100%}.fighters .fighters-event__value-name .dash{display:inline-block;margin:0 14px}.fighters .fighters-event__value-time{color:#ced3da;font-size:12px}.fighters .fighters-event__value-arrow{position:absolute;right:29px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.fighters .fighters-event__list{padding:0;margin:0;list-style:none;display:none}.fighters .fighters-event__list li{padding:0 44px;position:relative;background:#fff;font-size:12px;font-weight:700;height:80px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.fighters .fighters-event__list li span{position:relative;z-index:1}.fighters .fighters-event__list li:first-of-type:before{content:'';position:absolute;left:0;top:0;width:100%;height:35px;background:-webkit-gradient(linear,left top,left bottom,from(#e8e8e8),to(rgba(249,249,249,0)));background:linear-gradient(180deg,#e8e8e8 0,rgba(249,249,249,0) 100%)}.fighters .fighters-event__list li:last-of-type{box-shadow:inset 0 -20px 20px 0 rgba(0,0,0,.02)}.fighters .fighters-event__list li:nth-child(2n+1){background:#f9f9f9}.fighters .fighters-event.open .fighters-event__value-arrow{-webkit-transform:rotate(180deg);transform:rotate(180deg);margin-top:-9px}.fighters .fighters-event.open .fighters-event__value-arrow svg path{stroke:#43d17c}.fighters .fighters-event.open .fighters-event__list{display:block}.fighters .fighters-bet__row{display:none}.fighters .fighters-bet__row:first-of-type{display:-webkit-box;display:flex;position:relative}.fighters .fighters-bet__row:first-of-type .fighters-bet__item:before{content:'';position:absolute;left:0;bottom:0;width:100%;height:1px;background:#ebeef2}.fighters .fighters-bet__row:first-of-type .fighters-bet__item:after{content:'';position:absolute;left:0;top:-1px;width:100%;height:1px;background:#ebeef2}.fighters .fighters-bet__row:nth-child(2n) .fighters-bet__item{background:#f9f9f9}.fighters .fighters-bet.open .fighters-bet__row{display:-webkit-box;display:flex}.fighters .fighters-bet__item{display:-webkit-box;display:flex;min-width:210px;height:80px;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;position:relative}.fighters .fighters-bet__num{margin-right:36px;text-align:center;font-weight:700;font-size:14px}.fighters .fighters-bet__num:last-of-type{margin-right:0}.fighters .fighters-bet__num .num{font-size:12px;color:#ced3da}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xvY2FsX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwic3R5bGUuY3NzIiwiY29tbW9uL2dsb2JhbC5zY3NzIiwiY29tbW9uL2hlYWRlci5zY3NzIiwiaW5jbHVkZXMvaGVhZGVyLWJldC5zY3NzIiwiaW5jbHVkZXMvZmlnaHRlcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUNVQSxLREVrQyxZQUFPLEtBR3pDLHlCQUFBLEtBZUEsS0FDRSxPQUFBLEVDQ0YsS0RTRSxRQUFBLE1BV0YsR0FDRSxVQUFBLElBQXlCLE9BQUEsTUFBQSxFQ0MzQixHRFVxQyxXQUFBLFlBQ25CLE9BQU8sRUFHekIsU0FBQSxRQ0FBLElBQ0UsS0FBTSxJQUFJLFNBQVMsQ0FBRSxVQVl2QixFQUFFLFdBQUEsSUFTRixZRGNBLGNBQUEsS0NYRSxnQkFBaUIsVURja0Isd0JBQUEsVUFBQSxPQUNuQyxnQkFBYyxVQUFBLE9DSmhCLEVEZUEsT0NiRSxZQUFhLE9BUWYsS0FDQSxJRGlCQSxLQUNFLEtBQUEsSUFBQSxTQUFlLENBQUEsVUNQakIsTURxQkEsVUFBQSxJQ1pBLElEd0JBLElDdEJFLFVBQVcsSUFDWCxZQUFhLEVBQ2IsU0FBVSxTQUNWLGVBQWdCLFNBR2xCLElEc0JtQixPQUFBLE9DbEJuQixJRG9CYSxJQUFBLE1DVGIsSURzQkEsYUFBQSxLQ1ZBLE9Ed0JBLE1DdEJBLFNBQ0EsT0FDQSxTRHdCRSxLQUFBLElBQUEsQ0FBQSxLQUFBLFFDcEJBLE9BQUEsRUFVRixPQUNBLE1BRUUsU0FBVSxRRHFDWixPQzVCQSxPRGdDQSxlQUFBLEtDdEJBLGNBQ0EsYUFDQSxjQUhBLE9EaUNFLG1CQUFjLE9DckJoQixnQ0QyQkEsK0JDekJBLGdDQUhBLHlCQUdFLGFBQUEsS0Q2QkYsUUFBQSxFQ25CQSw2QkQrQkEsNEJDN0JBLDZCQUhBLHNCQUlFLFFBQVMsSUFBSSxPQUFPLFdBT3RCLFNBQ0UsUUFBUyxNQUFPLE1BQU8sT0FVekIsT0FBRSxXQUFBLFdEb0NBLE1BQUEsUUFDQSxRQUFBLE1DOUJBLFVBQVcsS0FFWCxRQUFTLEVBQ1gsWUFBQSxPQVNBLFNEbUM4QixlQUFBLFNDM0I5QixTQUFFLFNBQUEsS0FTRixnQkFDQSxhRHdDQSxXQUFBLFdBR0EsUUFBQSxFQ2hDQSx5Q0FBQSx5Q0Q2Q0UsT0FBQSxLQ25DRixjQUNFLG1CQUFvQixVQzVTcEIsZUFBQSxLRHNURix5Q0FDRSxtQkFBb0IsS0FRdEIsNkJFMVVBLG1CQUFBLE9BRUUsS0FBQSxRRnNWRixRQUNFLFFFelVFLE1GZ1ZKLFFBQ0UsUUVyVU0sVUYrVVIsU0FDRSxRQUFTLEtBT1gsU0FDRSxRRzlXRSxLSGlYSixFQUVBLFFBREEsU0FFRSxXRzVXRSxXSCtXSixLQUNFLFdHbFhDLFdIcVhILEtBQ0UsWUd4V0UsV0FBZSxDQUFBLFdIeVdqQixPR3hXRSxFSHlXRixXRzNXQyxRSDhXSCxJQUNFLFVBQVcsS0FHYixFSTNZRSxnQkFBZ0IsS0orWWxCLFdJMVlFLFVBQUEsT0o0WUEsT0kzWUUsRUFBQSxJSjhZSixNSXhZRSxTQUFBLFNKMFlBLFNJellFLE9KNFlKLFFBQ0UsV0l2WUUsUUp3WUYsUUl2WUUsS0FBQSxFSndZRixjSXZZRSxLSjBZSixjQUNFLFFJellFLFlKMFlGLFFJellFLEtKMFlGLGtCSXpZbUIsT0owWW5CLFlJellFLE9KNFlKLGNBQ0UsYUl4WUUsS0oyWUosY0FDRSxRSXZZRSxZSndZRixRSXZZSSxLSndZSixXSXZZSSxLSndZSixRSXZZSSxFSndZSixPSXZZSSxFQUFBLEVBQUEsRUFBQSxLSjBZTixpQkFDRSxhSXpZSSxLSjRZTiw4QkFDRSxhSTFZSSxFSjZZTixtQkFDRSxNSXpZTSxLSjBZTixZSXpZTSxJSjBZTixVSXpaRyxLSjBaSCxlSXZZTSxVSjBZUix5QkFDRSxNSTlaRyxRSmlhTCwwQkFDRSxNSTlYSSxRSmlZTixRQUNFLE9JOVhJLElBQUEsTUFBQSxJSmlZTixZQUNFLGNJaFlJLEtKbVlOLHNCQUNFLE1JcGRGLFFKcWRFLFlJallNLElKa1lOLFVJallNLEtKa1lOLFlJallNLEtKa1lOLGVJallnQixVSmtZaEIsZUlqWWMsT0prWWQsY0lqWWlCLElKa1lqQixRSWpZTSxNSm9ZUixrQkFDRSxNSS9YTSxRSmdZTixVSS9YTSxLSmdZTixZSS9YTSxJSmdZTixRSS9YTSxNSmdZTixPSW5lRixFSnNlQSx1QkFDRSxZSTNYTSxJSjRYTixRSTNYTSxhSjhYUixrQkFDRSxVSXpYTSxLSjBYTixNSXpYTSxRSjRYUix1QkFDRSxRSXZYSSxhSndYSixXSXZYSSxRSndYSixZSXZYSSxJSjBYTixVQUNFLFFJdFhNLFlKdVhOLFFJdFhNLEtKdVhOLFdJdFhNLEtKdVhOLGNJdFhNLElBQVksSUFBQSxFQUFBLEVKdVhsQixZSXRYTSxJSnVYTixTSXZYTSxTSjBYUixnQkFDRSxVSXZYUSxNSndYUixXSXZYUSxFQUFVLEVBQUEsS0FBQSxtQkp3WGxCLFNJbGdCRixTSm1nQkUsUUlwWFUsRUp1WFosaUJBQ0UsV0lwWFUsS0pxWFYsU0lwWFUsU0p1WFosb0JBQ0UsV0lsWFEsS0ptWFIsV0k3Z0JGLFFKOGdCRSxjSWhYUSxJQUFBLEVBQUEsRUFBQSxFQTlKVixhQUFBLElBQUEsTUFBQSxRSmdoQkUsUUkzV00sWUo0V04sUUk1V00sS0o2V04sa0JJNVdzQixPSjZXdEIsWUluaEJGLE9Kb2hCRSxhSTNXUSxLQXpLVixZQUFBLElKc2hCRSxVSXhXTSxLQTlLUixNQUFBLEtKMGhCQSxxQkFDRSxRSW5XTSxZSm9XTixRSW5XTSxLSm9XTixNSTdoQkYsS0o4aEJFLFNJaldVLFNKa1dWLFFJaldVLEVKb1daLDBCQUNFLFdJaldVLEtKa1dWLFdJaldVLFFKa1dWLGFJcmlCRixJQUFBLE1BQUEsUUpzaUJFLFFJL1ZVLFlKZ1dWLFFJL1ZVLEtKZ1dWLGlCSS9WaUIsT0pnV2pCLGdCSS9WbUIsT0pnV25CLGtCSS9WcUIsT0pnV3JCLFlJL1ZVLE9KZ1dWLFlJL1ZVLElKZ1dWLGdCSTdpQkYsVUo4aUJFLE9JMVZRLFFBcE5WLFVBQUEsTUpnakJFLFVJclZNLEtKd1ZSLHVDQUNFLGNJcFZpQixFQUFBLElBQUEsRUFBQSxFSnFWakIsYUlwVkksRUp1Vk4sZ0NBQ0UsZ0JJclZJLEtKd1ZOLGlDQUNFLE1JcFZJLFFKcVZKLGdCSXBWSSxLSnVWTiw4QkFDRSxhSW5WTSxLSnNWUixpQ0FDRSxRQUFTLEVBQUUsS0FBSyxFQUFFLEtBQ2xCLFNBQVUsU0FDVixPQUFRLFFBQ1IsV0FBWSxRQUNaLE9BQVEsS0FDUixRQUFTLFlBQ1QsUUFBUyxLQUNULFVBQVcsS0FDWCxpQkFBa0IsT0FDbEIsZ0JBQWlCLE9BQ2pCLG1CQUFvQixTQUNwQixzQkFBdUIsT0FDdkIsZUFBZ0IsT0FHbEIsd0NBQ0UsUUFBUyxHQUNULFNBQVUsU0FDVixPQUFRLEVBQ1IsS0FBTSxLQUNOLE1BQU8sRUFDUCxPQUFRLElBQ1IsV0FBWSxRQUdkLHNDQUNFLFlBQWEsSUFDYixRQUFTLE1BQ1QsY0FBZSxJQUNmLFVBQVcsS0FDWCxTQUFVLFNBQ1YsVUFBVyxLQUdiLDRDQUNFLFFBQVMsYUFDVCxPQUFRLEVBQUUsS0FHWixzQ0FDRSxNQUFPLFFBQ1AsVUFBVyxLQUdiLHVDQUNFLFNBQVUsU0FDVixNQUFPLEtBQ1AsSUFBSyxJQUNMLGtCQUFtQixpQkFDbkIsVUFBVyxpQkFHYixnQ0FDRSxRQUFTLEVBQ1QsT0FBUSxFQUNSLFdBQVksS0FDWixRQUFTLEtBR1gsbUNBQ0UsUUFBUyxFQUFFLEtBQ1gsU0FBVSxTQUNWLFdBQVksS0FDWixVQUFXLEtBQ1gsWUFBYSxJQUNiLE9BQVEsS0FDUixRQUFTLFlBQ1QsUUFBUyxLQUNULGtCQUFtQixPQUNuQixZQUFhLE9BR2Ysd0NBQ0UsU0FBVSxTQUNWLFFBQVMsRUFHWCx3REFDRSxRQUFTLEdBQ1QsU0FBVSxTQUNWLEtBQU0sRUFDTixJQUFLLEVBQ0wsTUFBTyxLQUNQLE9BQVEsS0FDUixXQUFZLG9GQUNaLFdBQVksMkRBR2QsZ0RBQ0UsV0FBWSxNQUFNLEVBQUksTUFBTSxLQUFLLEVBQUUsZ0JBR3JDLG1EQUNFLFdBQVksUUFHZCw0REFDRSxrQkFBbUIsZUFDbkIsVUFBVyxlQUNYLFdBQVksS0FHZCxxRUFDRSxPQUFRLFFBR1YscURBQ0UsUUFBUyxNQUdYLDZCQUNFLFFBQVMsS0FHWCwyQ0FDRSxRQUFTLFlBQ1QsUUFBUyxLQUNULFNBQVUsU0FHWixzRUFDRSxRQUFTLEdBQ1QsU0FBVSxTQUNWLEtBQU0sRUFDTixPQUFRLEVBQ1IsTUFBTyxLQUNQLE9BQVEsSUFDUixXQUFZLFFBR2QscUVBQ0UsUUFBUyxHQUNULFNBQVUsU0FDVixLQUFNLEVBQ04sSUFBSyxLQUNMLE1BQU8sS0FDUCxPQUFRLElBQ1IsV0FBWSxRQUdkLCtEQUNFLFdBQVksUUFHZCxnREFDRSxRQUFTLFlBQ1QsUUFBUyxLQUdYLDhCQUNFLFFBQVMsWUFDVCxRQUFTLEtBQ1QsVUFBVyxNQUNYLE9BQVEsS0FDUixpQkFBa0IsT0FDbEIsZ0JBQWlCLE9BQ2pCLGtCQUFtQixPQUNuQixZQUFhLE9BQ2IsU0FBVSxTQUdaLDZCQUNFLGFBQWMsS0FDZCxXQUFZLE9BQ1osWUFBYSxJQUNiLFVBQVcsS0FHYiwwQ0FDRSxhQUFjLEVBR2hCLGtDQUNFLFVBQVcsS0FDWCxNQUFPIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6ICNFNUU1RTU7IH1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTcwMHB4O1xuICBtYXJnaW46IDAgNnZ3OyB9XG5cbi5tYWluIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjMDYxNjI5O1xuICBwYWRkaW5nOiAxMnB4IDA7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7IH1cbiAgLmhlYWRlcl9fd3JhcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAuaGVhZGVyX19tZW51IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgMCAwIDQwcHg7IH1cbiAgICAuaGVhZGVyX19tZW51IGxpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNDJweDsgfVxuICAgICAgLmhlYWRlcl9fbWVudSBsaTpsYXN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAgIC5oZWFkZXJfX21lbnUgbGkgYSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgICAgIC5oZWFkZXJfX21lbnUgbGkgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICNDNkZBMzI7IH1cbiAgICAgIC5oZWFkZXJfX21lbnUgbGkuYWN0aXZlIGEge1xuICAgICAgICBjb2xvcjogI0M2RkEzMjsgfVxuXG4uZm9vdGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9XG5cbi5oZWFkZXItYmV0IHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAuaGVhZGVyLWJldF9fc3VidGl0bGUge1xuICAgIGNvbG9yOiAjNDE1QjdBO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5oZWFkZXItYmV0X19uYW1lIHtcbiAgICBjb2xvcjogIzA2MTYyOTtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7IH1cbiAgICAuaGVhZGVyLWJldF9fbmFtZSBzcGFuIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5oZWFkZXItYmV0X190aW1lIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgY29sb3I6ICMwNjE2Mjk7IH1cbiAgICAuaGVhZGVyLWJldF9fdGltZSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGJhY2tncm91bmQ6ICNDNkZBMzI7XG4gICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4uZmlnaHRlcnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBiYWNrZ3JvdW5kOiAjRkZGO1xuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcbiAgbWFyZ2luLWxlZnQ6IDZ2dztcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5maWdodGVyc19fbGVmdCB7XG4gICAgbWluLXdpZHRoOiA0MTJweDtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDMwcHggcmdiYSgzMCwgMzMsIDM4LCAwLjA4KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMjsgfVxuICAuZmlnaHRlcnNfX3JpZ2h0IHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZmlnaHRlcnMtbGVmdC1oZWFkIHtcbiAgICBtaW4taGVpZ2h0OiA1NHB4O1xuICAgIGJhY2tncm91bmQ6ICMwNjE2Mjk7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4IDAgMCAwO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICMxRjM3NTM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctbGVmdDogNDRweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICNGRkY7IH1cbiAgLmZpZ2h0ZXJzLXJpZ2h0LWhlYWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDI7IH1cbiAgICAuZmlnaHRlcnMtcmlnaHQtaGVhZF9fY29sIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDU0cHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDYxNjI5O1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzFGMzc1MztcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgbWluLXdpZHRoOiAyMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgICAgLmZpZ2h0ZXJzLXJpZ2h0LWhlYWRfX2NvbDpsYXN0LW9mLXR5cGUge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDhweCAwIDA7XG4gICAgICAgIGJvcmRlci1yaWdodDogMDsgfVxuICAgICAgLmZpZ2h0ZXJzLXJpZ2h0LWhlYWRfX2NvbDpob3ZlciB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgICAgLmZpZ2h0ZXJzLXJpZ2h0LWhlYWRfX2NvbC5hY3RpdmUge1xuICAgICAgICBjb2xvcjogI0M2RkEzMjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICAuZmlnaHRlcnMtcmlnaHQtaGVhZF9fY29sIGltZyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTRweDsgfVxuICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X192YWx1ZSB7XG4gICAgcGFkZGluZzogMCA1NXB4IDAgNDRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6ICNGRUZFRkU7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X192YWx1ZTpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDBweDtcbiAgICAgIGxlZnQ6IDQ0cHg7XG4gICAgICByaWdodDogMDtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgYmFja2dyb3VuZDogI0VCRUVGMjsgfVxuICAgIC5maWdodGVycyAuZmlnaHRlcnMtZXZlbnRfX3ZhbHVlLW5hbWUge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDNweDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG1pbi13aWR0aDogMTAwJTsgfVxuICAgICAgLmZpZ2h0ZXJzIC5maWdodGVycy1ldmVudF9fdmFsdWUtbmFtZSAuZGFzaCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAwIDE0cHg7IH1cbiAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X192YWx1ZS10aW1lIHtcbiAgICAgIGNvbG9yOiAjQ0VEM0RBO1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9XG4gICAgLmZpZ2h0ZXJzIC5maWdodGVycy1ldmVudF9fdmFsdWUtYXJyb3cge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDI5cHg7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X19saXN0IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X19saXN0IGxpIHtcbiAgICAgIHBhZGRpbmc6IDAgNDRweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGJhY2tncm91bmQ6ICNGRkY7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X19saXN0IGxpIHNwYW4ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDE7IH1cbiAgICAgIC5maWdodGVycyAuZmlnaHRlcnMtZXZlbnRfX2xpc3QgbGk6Zmlyc3Qtb2YtdHlwZTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDM1cHg7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNFOEU4RTggMCUsIHJnYmEoMjQ5LCAyNDksIDI0OSwgMCkgMTAwJSk7IH1cbiAgICAgIC5maWdodGVycyAuZmlnaHRlcnMtZXZlbnRfX2xpc3QgbGk6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMHB4IC0yMHB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMDIpOyB9XG4gICAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50X19saXN0IGxpOm50aC1jaGlsZCgybiArIDEpIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0Y5RjlGOTsgfVxuICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWV2ZW50Lm9wZW4gLmZpZ2h0ZXJzLWV2ZW50X192YWx1ZS1hcnJvdyB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICBtYXJnaW4tdG9wOiAtOXB4OyB9XG4gICAgLmZpZ2h0ZXJzIC5maWdodGVycy1ldmVudC5vcGVuIC5maWdodGVycy1ldmVudF9fdmFsdWUtYXJyb3cgc3ZnIHBhdGgge1xuICAgICAgc3Ryb2tlOiAjNDNEMTdDOyB9XG4gIC5maWdodGVycyAuZmlnaHRlcnMtZXZlbnQub3BlbiAuZmlnaHRlcnMtZXZlbnRfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5maWdodGVycyAuZmlnaHRlcnMtYmV0X19yb3cge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWJldF9fcm93OmZpcnN0LW9mLXR5cGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgLmZpZ2h0ZXJzIC5maWdodGVycy1iZXRfX3JvdzpmaXJzdC1vZi10eXBlIC5maWdodGVycy1iZXRfX2l0ZW06YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICNFQkVFRjI7IH1cbiAgICAgIC5maWdodGVycyAuZmlnaHRlcnMtYmV0X19yb3c6Zmlyc3Qtb2YtdHlwZSAuZmlnaHRlcnMtYmV0X19pdGVtOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiAtMXB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICNFQkVFRjI7IH1cbiAgICAuZmlnaHRlcnMgLmZpZ2h0ZXJzLWJldF9fcm93Om50aC1jaGlsZCgybikgLmZpZ2h0ZXJzLWJldF9faXRlbSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjRjlGOUY5OyB9XG4gIC5maWdodGVycyAuZmlnaHRlcnMtYmV0Lm9wZW4gLmZpZ2h0ZXJzLWJldF9fcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5maWdodGVycyAuZmlnaHRlcnMtYmV0X19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1pbi13aWR0aDogMjEwcHg7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5maWdodGVycyAuZmlnaHRlcnMtYmV0X19udW0ge1xuICAgIG1hcmdpbi1yaWdodDogMzZweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG4gICAgLmZpZ2h0ZXJzIC5maWdodGVycy1iZXRfX251bTpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgLmZpZ2h0ZXJzIC5maWdodGVycy1iZXRfX251bSAubnVtIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjQ0VEM0RBOyB9XG4iLCJAaW1wb3J0IFwiLi4vLi4vbG9jYWxfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZVwiO1xuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBiYWNrZ3JvdW5kOiAjRTVFNUU1O1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDE3MDBweDtcbiAgbWFyZ2luOiAwIDZ2dztcbn1cblxuLm1haW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iLCJAaW1wb3J0IFwiLi4vbWl4aW5zL21lZGlhXCI7XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjMDYxNjI5O1xuICBwYWRkaW5nOiAxMnB4IDA7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XG5cbiAgJl9fd3JhcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgJl9fbG9nbyB7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG5cbiAgJl9fbWVudSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwIDAgMCA0MHB4O1xuXG4gICAgbGkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiA0MnB4O1xuXG4gICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgYSB7XG4gICAgICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5oZWFkZXItYmV0IHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcblxuICAmX19zdWJ0aXRsZSB7XG4gICAgY29sb3I6ICM0MTVCN0E7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMjVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAmX19uYW1lIHtcbiAgICBjb2xvcjogIzA2MTYyOTtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7XG5cbiAgICBzcGFuIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxuXG4gICZfX3RpbWUge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICBjb2xvcjogIzA2MTYyOTtcblxuICAgIHNwYW4ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgYmFja2dyb3VuZDogJGFjY2VudDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgfVxufVxuIiwiLmZpZ2h0ZXJzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYmFja2dyb3VuZDogI0ZGRjtcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwIDA7XG4gIG1hcmdpbi1sZWZ0OiA2dnc7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmX19sZWZ0IHtcbiAgICBtaW4td2lkdGg6IDQxMnB4O1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMzBweCByZ2JhKDMwLCAzMywgMzgsIDAuMDgpO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAyO1xuICB9XG5cbiAgJl9fcmlnaHQge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgJi1sZWZ0LWhlYWQge1xuICAgIG1pbi1oZWlnaHQ6IDU0cHg7XG4gICAgYmFja2dyb3VuZDogIzA2MTYyOTtcbiAgICBib3JkZXItcmFkaXVzOiA4cHggMCAwIDA7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzFGMzc1MztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy1sZWZ0OiA0NHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogI0ZGRjtcbiAgfVxuXG4gICYtcmlnaHQtaGVhZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBjb2xvcjogI0ZGRjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMjtcblxuICAgICZfX2NvbCB7XG4gICAgICBtaW4taGVpZ2h0OiA1NHB4O1xuICAgICAgYmFja2dyb3VuZDogIzA2MTYyOTtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICMxRjM3NTM7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIG1pbi13aWR0aDogMjEwcHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG5cbiAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMCA4cHggMCAwO1xuICAgICAgICBib3JkZXItcmlnaHQ6IDA7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB9XG5cbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5maWdodGVycy1ldmVudCB7XG4gICAgJl9fdmFsdWUge1xuICAgICAgcGFkZGluZzogMCA1NXB4IDAgNDRweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJhY2tncm91bmQ6ICNGRUZFRkU7XG4gICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgICBsZWZ0OiA0NHB4O1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICNFQkVFRjI7XG4gICAgICB9XG5cbiAgICAgICYtbmFtZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xuXG4gICAgICAgIC5kYXNoIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgbWFyZ2luOiAwIDE0cHg7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi10aW1lIHtcbiAgICAgICAgY29sb3I6ICNDRUQzREE7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIH1cblxuICAgICAgJi1hcnJvdyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDI5cHg7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGlzdCB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAgIGxpIHtcbiAgICAgICAgcGFkZGluZzogMCA0NHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJhY2tncm91bmQ6ICNGRkY7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDM1cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjRThFOEU4IDAlLCByZ2JhKDI0OSwgMjQ5LCAyNDksIDApIDEwMCUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwcHggLTIwcHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4wMik7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1jaGlsZCgybiArIDEpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjRjlGOUY5O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5vcGVuIHtcbiAgICAgIC5maWdodGVycy1ldmVudF9fdmFsdWUtYXJyb3cge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgICAgICBtYXJnaW4tdG9wOiAtOXB4O1xuXG4gICAgICAgIHN2ZyBwYXRoIHtcbiAgICAgICAgICBzdHJva2U6ICM0M0QxN0M7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLmZpZ2h0ZXJzLWV2ZW50X19saXN0IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmZpZ2h0ZXJzLWJldCB7XG4gICAgJl9fcm93IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAuZmlnaHRlcnMtYmV0X19pdGVtIHtcbiAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI0VCRUVGMjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHRvcDogLTFweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjRUJFRUYyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOm50aC1jaGlsZCgybikge1xuICAgICAgICAuZmlnaHRlcnMtYmV0X19pdGVtIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjRjlGOUY5O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5vcGVuIHtcbiAgICAgIC5maWdodGVycy1iZXRfX3JvdyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgbWluLXdpZHRoOiAyMTBweDtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAmX19udW0ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAzNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG5cbiAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgfVxuXG4gICAgICAubnVtIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBjb2xvcjogI0NFRDNEQTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */
